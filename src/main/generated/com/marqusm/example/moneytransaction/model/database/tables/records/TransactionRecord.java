/*
 * This file is generated by jOOQ.
 */
package com.marqusm.example.moneytransaction.model.database.tables.records;


import com.marqusm.example.moneytransaction.model.database.tables.Transaction;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionRecord extends UpdatableRecordImpl<TransactionRecord> implements Record8<UUID, UUID, UUID, BigDecimal, Timestamp, Boolean, Timestamp, Timestamp> {

    private static final long serialVersionUID = -297724379;

    /**
     * Setter for <code>public.transaction.transaction_id</code>.
     */
    public void setTransactionId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.transaction.transaction_id</code>.
     */
    public UUID getTransactionId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.transaction.account_id</code>.
     */
    public void setAccountId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.transaction.account_id</code>.
     */
    public UUID getAccountId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.transaction.related_account_id</code>.
     */
    public void setRelatedAccountId(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.transaction.related_account_id</code>.
     */
    public UUID getRelatedAccountId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.transaction.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.transaction.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>public.transaction.timestamp</code>.
     */
    public void setTimestamp(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.transaction.timestamp</code>.
     */
    public Timestamp getTimestamp() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>public.transaction.meta_active</code>.
     */
    public void setMetaActive(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.transaction.meta_active</code>.
     */
    public Boolean getMetaActive() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>public.transaction.meta_creation_date</code>.
     */
    public void setMetaCreationDate(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.transaction.meta_creation_date</code>.
     */
    public Timestamp getMetaCreationDate() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>public.transaction.meta_modified_date</code>.
     */
    public void setMetaModifiedDate(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.transaction.meta_modified_date</code>.
     */
    public Timestamp getMetaModifiedDate() {
        return (Timestamp) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<UUID, UUID, UUID, BigDecimal, Timestamp, Boolean, Timestamp, Timestamp> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<UUID, UUID, UUID, BigDecimal, Timestamp, Boolean, Timestamp, Timestamp> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Transaction.TRANSACTION.TRANSACTION_ID;
    }

    @Override
    public Field<UUID> field2() {
        return Transaction.TRANSACTION.ACCOUNT_ID;
    }

    @Override
    public Field<UUID> field3() {
        return Transaction.TRANSACTION.RELATED_ACCOUNT_ID;
    }

    @Override
    public Field<BigDecimal> field4() {
        return Transaction.TRANSACTION.AMOUNT;
    }

    @Override
    public Field<Timestamp> field5() {
        return Transaction.TRANSACTION.TIMESTAMP;
    }

    @Override
    public Field<Boolean> field6() {
        return Transaction.TRANSACTION.META_ACTIVE;
    }

    @Override
    public Field<Timestamp> field7() {
        return Transaction.TRANSACTION.META_CREATION_DATE;
    }

    @Override
    public Field<Timestamp> field8() {
        return Transaction.TRANSACTION.META_MODIFIED_DATE;
    }

    @Override
    public UUID component1() {
        return getTransactionId();
    }

    @Override
    public UUID component2() {
        return getAccountId();
    }

    @Override
    public UUID component3() {
        return getRelatedAccountId();
    }

    @Override
    public BigDecimal component4() {
        return getAmount();
    }

    @Override
    public Timestamp component5() {
        return getTimestamp();
    }

    @Override
    public Boolean component6() {
        return getMetaActive();
    }

    @Override
    public Timestamp component7() {
        return getMetaCreationDate();
    }

    @Override
    public Timestamp component8() {
        return getMetaModifiedDate();
    }

    @Override
    public UUID value1() {
        return getTransactionId();
    }

    @Override
    public UUID value2() {
        return getAccountId();
    }

    @Override
    public UUID value3() {
        return getRelatedAccountId();
    }

    @Override
    public BigDecimal value4() {
        return getAmount();
    }

    @Override
    public Timestamp value5() {
        return getTimestamp();
    }

    @Override
    public Boolean value6() {
        return getMetaActive();
    }

    @Override
    public Timestamp value7() {
        return getMetaCreationDate();
    }

    @Override
    public Timestamp value8() {
        return getMetaModifiedDate();
    }

    @Override
    public TransactionRecord value1(UUID value) {
        setTransactionId(value);
        return this;
    }

    @Override
    public TransactionRecord value2(UUID value) {
        setAccountId(value);
        return this;
    }

    @Override
    public TransactionRecord value3(UUID value) {
        setRelatedAccountId(value);
        return this;
    }

    @Override
    public TransactionRecord value4(BigDecimal value) {
        setAmount(value);
        return this;
    }

    @Override
    public TransactionRecord value5(Timestamp value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public TransactionRecord value6(Boolean value) {
        setMetaActive(value);
        return this;
    }

    @Override
    public TransactionRecord value7(Timestamp value) {
        setMetaCreationDate(value);
        return this;
    }

    @Override
    public TransactionRecord value8(Timestamp value) {
        setMetaModifiedDate(value);
        return this;
    }

    @Override
    public TransactionRecord values(UUID value1, UUID value2, UUID value3, BigDecimal value4, Timestamp value5, Boolean value6, Timestamp value7, Timestamp value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionRecord
     */
    public TransactionRecord() {
        super(Transaction.TRANSACTION);
    }

    /**
     * Create a detached, initialised TransactionRecord
     */
    public TransactionRecord(UUID transactionId, UUID accountId, UUID relatedAccountId, BigDecimal amount, Timestamp timestamp, Boolean metaActive, Timestamp metaCreationDate, Timestamp metaModifiedDate) {
        super(Transaction.TRANSACTION);

        set(0, transactionId);
        set(1, accountId);
        set(2, relatedAccountId);
        set(3, amount);
        set(4, timestamp);
        set(5, metaActive);
        set(6, metaCreationDate);
        set(7, metaModifiedDate);
    }
}
